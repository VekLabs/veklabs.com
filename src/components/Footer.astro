---
import config from "../config.json"
import candianFlagSvg from "../images/canada.svg?url"

const today = new Date()

const socialLogos = import.meta.glob("../images/*.svg")
const socialLogoKeys = Object.keys(socialLogos)
---

<!-- <div class="banners">
  {{ if (isset .Params "cta") }}
  {{ with .Params.cta }}{{ partial "site/cta" . }}{{ end }}
  {{ else if (isset .Site.Params "cta")}}
  {{ with .Site.Params.cta }}{{ partial "site/cta" . }}{{ end }}
  {{ end }}
</div> -->
<footer class="bg-background h-max" role="contentinfo">
  <div
    class="flex flex-col lg:flex-row gap-6 items-center py-4 px-6 border-t border-t-neutral-800"
  >
    <div class="basis-1/3 flex items-center gap-2">
      <img
        class="h-3 w-4 text-white"
        src={candianFlagSvg}
        alt="Canadian Flag"
      />
      {config.FOOTER_PRETEXT}
    </div>

    <div class="basis-1/3 text-center">
      <div>
        &copy; {today.getFullYear()}
        <a href={config.baseURL}>{config.title} Inc.</a>
      </div>
    </div>

    <div
      class="basis-1/3 text-right justify-end inline-grid grid-flow-col grid-rows-1 gap-4"
    >
      {
        config.social.channel.map(async ({ url, name, icon }) => {
          const socialIconKey = socialLogoKeys.find((key) => key.includes(icon))
          if (!socialIconKey) return

          const path = (await socialLogos[socialIconKey]()) as {
            default: { src: string }
          }
          if (!path?.default?.src) return
          const socialIcon = path?.default?.src

          return (
            <a href={url} target="_blank" class="text-white font-semibold">
              <img src={socialIcon} alt={name} class="h-6 lg:h-4" />
            </a>
          )
        })
      }
    </div>
  </div>

  <div
    class="flex gap-3 flex-col lg:flex-row py-4 px-6 border-t border-neutral-800 items-center justify-center bg-black"
  >
    <span>
      {config.mail}
    </span>
  </div>
</footer>
