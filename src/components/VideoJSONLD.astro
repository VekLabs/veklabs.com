---
import type { CollectionEntry } from "astro:content"
import { formatISO } from "date-fns"
import config from "../content/config.json"

type Props = CollectionEntry<"videos">

const {
  data: {
    title,
    videoID,
    videoURL,
    previewURL,
    image,
    type,
    meta,
    publishDate,
    site,
  },
} = Astro.props

// Format date to ISO 8601 if it exists

const formattedDate = publishDate ? formatISO(publishDate) : undefined

// Construct the JSON-LD object
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "VideoObject",
  "@id": videoURL,
  name: title,
  identifier: videoID,
  url: videoURL,
  thumbnailUrl: previewURL,
  image: [image.src],
  uploadDate: formattedDate,
  datePublished: formattedDate,
  contentUrl: videoURL,
  encodingFormat: type,
  keywords: [type],
  countryOfOrigin: {
    "@type": "Country",
    name: "Canada",
  },
  productionCompany: {
    name: "Vek Labs",
    slogan: config.description,
  },
  ...(meta && {
    about: meta.map((item) => ({
      "@type": "Thing",
      name: item.label,
      description: item.value,
    })),
  }),
  ...(formattedDate && { datePublished: formattedDate }),
  ...(site && {
    publisher: {
      "@type": "Organization",
      name: "Vek Labs",
    },
  }),
}
---

<script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
